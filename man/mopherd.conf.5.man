.TH "MOPHERD.CONF" "5" "December 2009"
.SH NAME
.B mopherd.conf \- configuration for mopherd
.SH INTRODUCTION
The mopher daemon
.BR mopherd (1)
uses 2 configuration files
.BR mopherd.conf (5)
and
.BR mail.acl (5).
The former controls the behaviour of the daemon itself while the latter
controls how incoming mail is filtered. By default
.B mopherd
looks for both configuration files in
.I $CONF_DIR
\&. Alternative locations may be specified using the
.B mopherd
command line argument -c for
.B mopherd.conf
or the configuration directive acl_path for
.B mail.acl
\&. For more information see the respective man pages.
.SH DESCRIPTION
The file
.B mopherd.conf
contains the configuration for the mopher mail filter deamon.
.SH PARAMETERS
Description of all mopherd.conf parameters. Default values are shown after the
parameter name in parentheses.
.SS acl_log_level (default: LOG_ERR)
Default log level for ACL log statements if level is not specified in
.BR mail.acl (5)
target.
.SS acl_path (default: $MAIL_ACL)
Filesystem path for mail.acl. Starting point for relative paths is
.I workdir_path
(see
.I workdir_path
below).
.SS cleanup_interval (default: 300)
Mopherd stores all data in database tables.
.I cleanup_interval
controls the cleanup interval in seconds for stale records in the tables.
.SS client_retry_interval (default: 10)
If mopherd.conf specifies database servers (see
.I server
below) the
.I client_retry_interval
controls the retry interval if a server is unreachable.
.SS greylist_delay (default: 1800)
Default greylist delay in seconds if not specified in
.BR mail.acl (5)
target.
.SS greylist_valid (default: 86400)
Default period in seconds a greylist record is kept in the database if not
specified in
.BR mail.acl (5)
target. Every time a host retries a message the valid timeout is reset.
.SS greylist_visa (default: 604800)
Default period in seconds a greylist record is kept in the database after
successful greylisting if not specified in
.BR mail.acl (5)
\&. Message triplets (host, from, rcpt) holding a visa are no longer greylisted.
.SS hostname (default: unspecified)
Hostname can be used to overwrite the value returned by
.BR gethostname (3)
\&. The hostname is used for example to to build a received header for spamd
or when connecting another mopherd server.
.SS milter_socket (default: unix:mopherd.sock)
Socket where mopherd will listen for incoming MTA connections. Relative paths
for UNIX domain sockets start at
.I workdir_path
(see below).
.PP
Examples:
.PP
.nf
milter_socket = "inet:1025@127.0.0.1"
milter_socket = "unix:/var/spool/mail/mopherd.sock"
.fi
.SS milter_socket_timeout (default: -1)
Timeout in seconds libmilter will wait for MTA communication (see libmilter
documentation). If set to -1 the libmilter default of 7210 seconds is used.
.SS milter_socket_umask (default: 007)
The umask mopherd uses when creating a UNIX domain socket.
.I milter_socket_umask
can be used to control the permissions of the
.I milter_socket
(see also
.I mopherd_socket
,
.I mopherd_user
and
.I mopherd_group
).
.SS module_path (default: $MOPHERD_DIR/modules)
Filesystem path where mopherd looks for modules.
.SS mopherd_group (default: unspecified)
Set mopherd's UNIX group id to the specified group. On most systems mopherd
will be started by the root user and group and inherit their privileges. It's
good practice to drop these privileges on startup.
.PP
Note: If you're using UNIX domain sockets you probably want to set
.I mopherd_group
to the same group as your MTA.
.SS mopherd_user (default: unspecified)
Set mopherd's UNIX user id to the specified user. On most systems mopherd
will be started by the root user and group and inherit their privileges. It's
good practice to drop these privileges on startup.
.PP
On most systems you want to create an unprivileged user to run mopherd.
.SS server (default: unspecified)
.I server
is a hash table containing all servers to sync database records with. Each
server must have path set.
.PP
Examples:
.PP
.nf
server[horus][path] = "inet:80.126.16.77:9025"
server[anubis]      = {
    path            = "inet:10.1.1.17:25001"
}
.fi
.SS server_socket (default: unspecified)
Socket where mopherd will listen for database table updates by other mopherd
peers.
.PP
Examples:
.PP
.nf
server_socket = "inet:10.40.124.8:9000"
server_socket = "inet:fe80::21d:60fe:33c1:a62d:9000"
server_socket = "inet::::20025"
.fi
.PP
Note: To listen on all IP4 and IP6 addresses you have to use 4 colons!
.SS spamd_socket (default: "inet:localhost:783")
.PP
Socket where mopherd will send SpamAssassin requests to.
.PP
Note: You need to load the SpamAssassin module (spamd.so) for this setting to
take effect.
.SS tables
Database configuration for mopherd tables. Each table has the following
subkeys:
.PP
.nf
.BR driver "   : database driver:
.BR path "     : filesystem path of the database or the UNIX domain socket"
.BR host "     : database server"
.BR port "     : database server port"
.BR database " : database name"
.BR table "    : table name"
.fi
.PP
Note: the default database driver is bdb and the database path is db/table.bdb
(e.g. db/greylist.bdb).
.PP
Examples:
.PP
.nf
table[greylist] = {
    driver      = "mysql",
    path        = "/tmp/mysql.sock",
    user        = "dbuser",
    pass        = "secret"
}

table[greylist] = {
    driver      = "mysql",
    host        = 127.0.0.1,
    port        = 3307,
    user        = "mopher",
    pass        = "P455w0RD",
    database    = "mopherd",
    table       = "gl_table"
}
.fi
.PP
Note: currently 3 tables exist:
.BR greylist ", " delivered_relays " and " delivered_penpals
.SS tarpit_progress_interval (default: 10)
Interval in seconds mopherd will notify the MTA while tarpitting.
.SS workdir_path (default: $MOPHERD_DIR)
Filesytem path where mopherd will
.BR chdir (2)
to after startup.
.SH EXAMPLES
.nf
# MOPHERD.CONF EXAMPLE


# mopherd user and group

mopherd_user    = "mopherd"
mopherd_group   = "postfix"


# database configuration for MySQL database

table[greylist] = {
    driver      = "mysql",
    path        = "/tmp/mysql.sock",
    user        = "mopher",
    pass        = "secret"
}

table[delivered_relays] = {
    driver      = "mysql",
    path        = "/tmp/mysql.sock",
    user        = "mopher",
    pass        = "secret"
}
    
table[delivered_penpals] = {
    driver      = "mysql",
    path        = "/tmp/mysql.sock",
    user        = "mopher",
    pass        = "secret"
}
    
    
# peer database records with server mx2

server_socket   = "inet::::9025"
server[mx2]     = {
    socket      = "inet:10.40.41.8:9025"
}

.fi
.SH FILES
$MOPHERD_CONF, $MAIL_ACL
.SH SEE ALSO
.nf
.BR mopherd "(1), mopherd mail filter daemon"
.BR mail.acl "(5), mopher mail access control list"
.fi
.SH AUTHORS
Manuel Badzong <manuel@andev.ch>
