MOPHERD.CONF(5)             BSD File Formats Manual            MOPHERD.CONF(5)

NNAAMMEE
     mmoopphheerrdd..ccoonnff -- the mopher daemon configuration file

DDEESSCCRRIIPPTTIIOONN
     The mmoopphheerrdd..ccoonnff file contains the default configuration used by
     mopherd(8) and mopherctl(8) to set various parameters for mopher's core
     functionality and its modules.  The list of all rules enforced by mopher
     can be found in mopherd.acl(5).

     Comment lines in mmoopphheerrdd..ccoonnff start with the `#' character, empty lines
     are treated as comments.  Configuration directives are key-value pairs
     and can span multiple lines.  Both key and value allow for some structure
     in that a key may contain indices and a value can be a table containing
     other (comma-separated) key-value pairs:

           key_a            = "string"
           key_b            = -1.0

           key_c[id_x]      = 1000
           key_c[id_y]      = 127.0.0.1

           key_d = {
                   key_e    = "/path/to/file",
                   key_f    = 200K,
                   key_g    = 12h,
                   key_h    = ::1
           }

     Each integer may have one of the following optional suffixes:
           s[econd]  multiply by 1
           m[inute]  multiply by 60
           h[our]    multiply by 3600
           d[ay]     multiply by 86400
           K[ibi]    multiply by 1024
           M[ebi]    multiply by 1048576
           G[ibi]    multiply by 1073741824

GGEENNEERRAALL CCOONNFFIIGGUURRAATTIIOONN
     The following directives control the general behaviour of mopher (default
     values are enclosed in parentheses):

     aaccll__lloogg__lleevveell (3)
           Syslog severity level (0-7) for messages logged by the _l_o_g keyword
           in mopherd.acl(5).

     aaccll__ppaatthh ("@sysconfdir@/mopher/mopherd.acl")
           Path to mopherd.acl(5).

     ccoonnttrrooll__ssoocckkeett ("inet:44554@127.0.0.1")
           Socket used by mopherctl(8) to control a running mopherd(8)
           instance.  Supported socket types are tcp (inet:port@address) and
           unix domain sockets (unix:/path/to/socket).

     ccoonnttrrooll__ssoocckkeett__ppeerrmmiissssiioonnss (0660)
           File system permissions of _c_o_n_t_r_o_l___s_o_c_k_e_t.  Only applies to unix
           domain sockets.

     ffoorreeggrroouunndd (0)
           Run in foreground, don't detach from the controlling terminal.

     ggrreeyylliisstt__ddeeaaddlliinnee (1d)
           Default maximal lifetime of a greylist item.  Older items will be
           removed from the greylist.  All _g_r_e_y_l_i_s_t rules in mopherd.acl(5)
           without a _d_e_a_d_l_i_n_e parameter will use this value.

     ggrreeyylliisstt__vviissaa (30d)
           Default maximal lifetime of a greylist visa item.  Older visa items
           will be removed from the greylist.  Greylist items are upgraded to
           visa items when _d_e_l_a_y expires or the number of _a_t_t_e_m_p_t_s is met.
           Subsequent successful mail deliveries will renew any existing visa
           item (i.e. reset its remaining lifetime).

     hhoossttnnaammee (gethostname(3))
           Default hostname used in self-references.

     lloogg__lleevveell (4)
           Syslog severity level (0-7) for messages logged by mopherd(8).

     mmiilltteerr__ssoocckkeett (inet:44555@127.0.0.1)
           Socket used by MTAs to communicate with a running mopherd(8)
           instance.  Supported socket types are tcp (inet:port@address) and
           unix domain sockets (unix:/path/to/socket).

     mmiilltteerr__ssoocckkeett__ppeerrmmiissssiioonnss (0660)
           File system permissions of _m_i_l_t_e_r___s_o_c_k_e_t.  Only applies to unix
           domain sockets.

     mmiilltteerr__ssoocckkeett__ttiimmeeoouutt (7210s)
           Default timeout for any communication between mopher and MTAs.

     mmoodduullee__ppaatthh ("@libdir@/mopher")
           Path to loadable mopher modules.  mopherd(8) will load all avail-
           able modules in _m_o_d_u_l_e___p_a_t_h during startup.

     mmoopphheerrdd__uusseerr ("mopher")
           User ID of mopherd(8) set during startup.  All files and sockets
           will be created as _m_o_p_h_e_r___u_s_e_r.

     mmoopphheerrdd__ggrroouupp ("mopher")
           Group ID of mopherd(8) set during startup.  All files and sockets
           will be created as _m_o_p_h_e_r___g_r_o_u_p.

     ttaarrppiitt__pprrooggrreessss__iinntteerrvvaall (10s)
           Interval between two progress notifications issued during tarpit-
           ting.  When mopherd(8) is tarpitting a host, it needs to issue
           periodic notifications to the MTA in order to reset its timeouts.

     wwoorrkkddiirr__ppaatthh ("/")
           Working directory of mopherd(8) set during startup.

TTAABBLLEE CCOONNFFIIGGUURRAATTIIOONN
     Mopher keeps its lists and state in generic tables.  The following two
     tables are part of mopher's core functionality:

     ssttaattee
           Contains some mopherd(8) state data.  Currently, it consists of a
           strictly increasing integer, incremented by mopherd(8) on each new
           connection and used as a distinct connection identifier in logs.

     ggrreeyylliisstt
           Contains greylist and visa triplets (origin, sender and recipient
           combinations) and various metadata about them.

     Defining a generic table also requires specifying its backend driver.
     Backend drivers will translate all requests to generic tables into
     requests as they are understood by that particular backend or library.

     The two most common types of backend drivers require one of the following
     two configuration directives when configuring the _g_r_e_y_l_i_s_t table:

           # illustrative example raw_db,
           # implementing a whole RDBMS
           table[greylist] = {
                   driver          = "raw_db",
                   path            = "/path/to/greylist.db"
           }

           # illustrative example net_db,
           # implementing socket access methods to a RDBMS
           table[greylist] = {
                   driver          = "net_db",
                   host            = 127.0.0.1,
                   database        = "mopher",
                   table           = "greylist",
                   user            = "mopher",
                   pass            = "secret"
           }

     Currently available backend drivers are:

     mmeemmddbb (Memory DB)
           A simple hash table stored in main memory.  Not persistent.  If no
           backend driver was configured for a table, that table will use the
           _m_e_m_d_b driver and therefore lose all its content as soon as
           mopherd(8) shuts down.

     bbddbb (Berkeley DB)
           Embedded database for key/value data.  Uses the legacy format/API
           (1.85) that is in most distributions either part of the standard C
           library or offered separately by one of the more recent db soft-
           ware-packages.

     ssaakkiillaa (MySQL)
           SQL database management system.

     _N_o_t_e: All backend drivers available in the mopher source distribution are
     usually compiled as loadable mopher modules.

MMOODDUULLEE CCOONNFFIIGGUURRAATTIIOONN
     Loadable mopher modules may extend mopher in mainly two ways: A Module
     may provide additional backend drivers for tables or additional symbols
     and functions that are made available to mopherd(8) during its evaluation
     of mopherd.acl(5).

     The following list only describes configuration directives for modules
     that require some configuration.  See mopherd.acl(5) for additional
     information on usage and behaviour.

   RReellaayy aanndd PPeennppaall CCoouunntteerr
     _c_o_u_n_t_e_r counts the amount of successfully delivered messages by a relay
     (address or domain) or penpal (origin, sender and recipient combination).
     Both counters are stored in tables and therefore require the selection of
     a backend driver:

           table[counter_relay] = {
                   driver          = "bdb",
                   path            = "/path/to/relay.db"
           }

           table[counter_penpal] = {
                   driver          = "bdb",
                   path            = "/path/to/penpal.db"
           }

     The following directives control the general behaviour of _c_o_u_n_t_e_r
     (default values are enclosed in parentheses):

     ccoouunntteerr__eexxppiirree__llooww (7d)
           Default maximal lifetime of a counter item with a value less than
           _c_o_u_n_t_e_r___t_h_r_e_s_h_o_l_d.

     ccoouunntteerr__eexxppiirree__hhiigghh (60d)
           Default maximal lifetime of a counter item with a value greater
           than _c_o_u_n_t_e_r___t_h_r_e_s_h_o_l_d.

     ccoouunntteerr__tthhrreesshhoolldd (3)
           See _c_o_u_n_t_e_r___e_x_p_i_r_e___l_o_w and _c_o_u_n_t_e_r___e_x_p_i_r_e___h_i_g_h.

   DDNNSSBBLL RReessoollvveerr
     _r_b_l maps DNSBL query results to mopherd.acl(5) symbols.  Each black- or
     whitelist needs to be defined through the indexed keyword _r_b_l before it
     can be used in mopherd.acl(5):

           rbl[list_foo] = blacklist.foo.org
           rbl[list_bar] = whitelist.bar.net

     where the name of the index is the name of the symbol exported to
     mopherd.acl(5).

   SSppaammAAssssaassssiinn RReessoollvveerr
     _s_p_a_m_d submits messages to SpamAssassin and maps the evaluation results to
     mopherd.acl(5) symbols.

     The following directives control the general behaviour of _s_p_a_m_d (default
     values are enclosed in parentheses):

     ssppaammdd__ssoocckkeett ("inet:783@127.0.0.1")
           Socket used by mopherd(8) to check incoming messages for their
           score and matching tests.

IIMMPPLLEEMMEENNTTAATTIIOONN NNOOTTEESS
     Third party distributors of binary packages may split a full mopher build
     into several complementary packages in order to make some dependencies
     optional.  In such cases, it is possible that some modules are not avail-
     able on your system even though they are documented here.

SSEEEE AALLSSOO
     mopher(7), mopherd(8), mopherctl(8)

BSD                              July 13, 2014                             BSD
